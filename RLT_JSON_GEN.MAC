/com, ------------------------------------------------
/com, RLT_JSON_GEN.MAC - ANSYS APDL Macro
/com, Generates JSON input for Rigid Load Transfer Tool
/com, Usage: RLT_JSON_GEN, ARG1, ARG2
/com,   ARG1: Array of load system CSYS IDs
/com,   ARG2: Array of target system CSYS IDs
/com, ------------------------------------------------

/prep7

*del, load_csys,, nopr
*del, target_csys,, nopr
*dim, load_csys, array, %arg1%
*dim, target_csys, array, %arg2%

*get, num_load, parm, load_csys, dim, x
*get, num_target, parm, target_csys, dim, x

/com, Initialize JSON structure
*cfopen, rlt_input, json
*cfwrite, {
*cfwrite,   "loads": [
*do, i, 1, num_load
    csys, load_csys(i)
    *get, x, csys, load_csys(i), loc, x
    *get, y, csys, load_csys(i), loc, y
    *get, z, csys, load_csys(i), loc, z
    *get, rx, csys, load_csys(i), ang, x
    *get, ry, csys, load_csys(i), ang, y
    *get, rz, csys, load_csys(i), ang, z

    *cfwrite,     {
    *cfwrite,       "name": "Load System %i%",
    *cfwrite,       "force": [0.0, 0.0, 0.0],
    *cfwrite,       "moment": [0.0, 0.0, 0.0],
    *cfwrite,       "euler_angles": [%rx%, %ry%, %rz%],
    *cfwrite,       "rotation_order": "xyz",
    *cfwrite,       "translation": [%x%, %y%, %z%],
    *cfwrite,       "color": {"hex": "#%i%0000"}
    *if, i, lt, num_load, then
        *cfwrite,     },
    *else
        *cfwrite,     }
    *endif
*enddo
*cfwrite,   ],
*cfwrite,   "targets": [
*do, i, 1, num_target
    csys, target_csys(i)
    *get, x, csys, target_csys(i), loc, x
    *get, y, csys, target_csys(i), loc, y
    *get, z, csys, target_csys(i), loc, z
    *get, rx, csys, target_csys(i), ang, x
    *get, ry, csys, target_csys(i), ang, y
    *get, rz, csys, target_csys(i), ang, z

    *cfwrite,     {
    *cfwrite,       "name": "Target System %i%",
    *cfwrite,       "euler_angles": [%rx%, %ry%, %rz%],
    *cfwrite,       "rotation_order": "xyz",
    *cfwrite,       "translation": [%x%, %y%, %z%],
    *cfwrite,       "color": {"hex": "#00%i%00"}
    *if, i, lt, num_target, then
        *cfwrite,     },
    *else
        *cfwrite,     }
    *endif
*enddo
*cfwrite,   ]
*cfwrite, }
*cfclose

/com, JSON file saved as 'rlt_input.json'
/com, ------------------------------------------------

! ! Define coordinate systems
! local, 11, 0, 1.0, 2.0, 3.0, 30, 45, 60  ! Load System 1
! local, 12, 0, 2.0, 3.0, 4.0, 45, 60, 90  ! Load System 2
! local, 21, 0, 5.0, 6.0, 7.0, 0, 0, 0     ! Target System 1

! ! Define arrays for load and target systems
! *dim, load_csys, array, 2
! load_csys(1) = 11
! load_csys(2) = 12

! *dim, target_csys, array, 1
! target_csys(1) = 21

! ! Run the macro
! RLT_JSON_GEN, load_csys, target_csys


! {
  ! "loads": [
    ! {
      ! "name": "Load System 1",
      ! "force": [0.0, 0.0, 0.0],
      ! "moment": [0.0, 0.0, 0.0],
      ! "euler_angles": [30.0, 45.0, 60.0],
      ! "rotation_order": "xyz",
      ! "translation": [1.0, 2.0, 3.0],
      ! "color": {"hex": "#10000"}
    ! },
    ! {
      ! "name": "Load System 2",
      ! "force": [0.0, 0.0, 0.0],
      ! "moment": [0.0, 0.0, 0.0],
      ! "euler_angles": [45.0, 60.0, 90.0],
      ! "rotation_order": "xyz",
      ! "translation": [2.0, 3.0, 4.0],
      ! "color": {"hex": "#20000"}
    ! }
  ! ],
  ! "targets": [
    ! {
      ! "name": "Target System 1",
      ! "euler_angles": [0.0, 0.0, 0.0],
      ! "rotation_order": "xyz",
      ! "translation": [5.0, 6.0, 7.0],
      ! "color": {"hex": "#00100"}
    ! }
  ! ]
! }

























